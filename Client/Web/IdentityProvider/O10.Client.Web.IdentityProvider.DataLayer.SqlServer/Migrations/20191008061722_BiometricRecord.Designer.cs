// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using O10.IdentityProvider.DataLayer.SqlServer;

namespace O10.IdentityProvider.DataLayer.SqlServer.Migrations
{
    [DbContext(typeof(SqlServerDataContext))]
    [Migration("20191008061722_BiometricRecord")]
    partial class BiometricRecord
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("O10.IdentityProvider.DataLayer.Model.BiometricRecord", b =>
                {
                    b.Property<long>("BiometricRecordId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte[]>("Content");

                    b.Property<int>("RecordType");

                    b.Property<long>("UserRecordId");

                    b.HasKey("BiometricRecordId");

                    b.HasIndex("UserRecordId");

                    b.ToTable("biometric_record");
                });

            modelBuilder.Entity("O10.IdentityProvider.DataLayer.Model.BlindingFactorsRecord", b =>
                {
                    b.Property<long>("BlindingFactorsRecordId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BiometricBlindingFactor");

                    b.Property<string>("IssuanceBlindingFactor");

                    b.HasKey("BlindingFactorsRecordId");

                    b.ToTable("blinding_factor_records");
                });

            modelBuilder.Entity("O10.IdentityProvider.DataLayer.Model.IdentityProviderSettings", b =>
                {
                    b.Property<long>("IdentityProviderSettingsId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("AccountId");

                    b.HasKey("IdentityProviderSettingsId");

                    b.ToTable("identity_provider_settings");
                });

            modelBuilder.Entity("O10.IdentityProvider.DataLayer.Model.RegistrationSession", b =>
                {
                    b.Property<long>("RegistrationSessionId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationTime");

                    b.Property<string>("SessionCommitment");

                    b.Property<string>("SessionKey");

                    b.Property<long?>("UserRecordId");

                    b.HasKey("RegistrationSessionId");

                    b.HasIndex("SessionCommitment")
                        .IsUnique()
                        .HasFilter("[SessionCommitment] IS NOT NULL");

                    b.HasIndex("SessionKey")
                        .IsUnique()
                        .HasFilter("[SessionKey] IS NOT NULL");

                    b.HasIndex("UserRecordId");

                    b.ToTable("registration_sessions");
                });

            modelBuilder.Entity("O10.IdentityProvider.DataLayer.Model.UserRecord", b =>
                {
                    b.Property<long>("UserRecordId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AssetId");

                    b.Property<DateTime>("CreationTime");

                    b.Property<string>("IssuanceBiometricCommitment");

                    b.Property<long>("IssuanceBlindingRecordId");

                    b.Property<string>("IssuanceCommitment");

                    b.Property<DateTime>("LastUpdateTime");

                    b.Property<string>("ProtectionCommitment");

                    b.Property<byte>("Status");

                    b.HasKey("UserRecordId");

                    b.HasIndex("AssetId")
                        .IsUnique()
                        .HasFilter("[AssetId] IS NOT NULL");

                    b.HasIndex("IssuanceCommitment")
                        .IsUnique()
                        .HasFilter("[IssuanceCommitment] IS NOT NULL");

                    b.ToTable("user_records");
                });

            modelBuilder.Entity("O10.IdentityProvider.DataLayer.Model.RegistrationSession", b =>
                {
                    b.HasOne("O10.IdentityProvider.DataLayer.Model.UserRecord", "UserRecord")
                        .WithMany()
                        .HasForeignKey("UserRecordId");
                });
#pragma warning restore 612, 618
        }
    }
}
