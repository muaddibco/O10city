// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using O10.Client.DataLayer.SqlServer;

namespace O10.Client.DataLayer.SqlServer.Migrations
{
    [DbContext(typeof(SqlServerDataContext))]
    [Migration("20210619012700_Refactoring1")]
    partial class Refactoring1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("O10.Client.DataLayer.ElectionCommittee.EcCandidateRecord", b =>
                {
                    b.Property<long>("EcCandidateRecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AssetId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("EcPollRecordId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("EcCandidateRecordId");

                    b.HasIndex("EcPollRecordId");

                    b.HasIndex("Name");

                    b.ToTable("EcCandidateRecords");
                });

            modelBuilder.Entity("O10.Client.DataLayer.ElectionCommittee.EcPollRecord", b =>
                {
                    b.Property<long>("EcPollRecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("AccountId")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("State")
                        .HasColumnType("int");

                    b.HasKey("EcPollRecordId");

                    b.HasIndex("Name");

                    b.ToTable("EcPollRecords");
                });

            modelBuilder.Entity("O10.Client.DataLayer.ElectionCommittee.EcPollSelection", b =>
                {
                    b.Property<long>("EcPollSelectionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EcBlindingFactor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EcCommitment")
                        .HasColumnType("nvarchar(450)");

                    b.Property<long?>("EcPollRecordId")
                        .HasColumnType("bigint");

                    b.Property<string>("VoterBlindingFactor")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EcPollSelectionId");

                    b.HasIndex("EcCommitment");

                    b.HasIndex("EcPollRecordId");

                    b.ToTable("EcPollSelections");
                });

            modelBuilder.Entity("O10.Client.DataLayer.Model.Account", b =>
                {
                    b.Property<long>("AccountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccountInfo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte>("AccountType")
                        .HasColumnType("tinyint");

                    b.Property<bool>("IsCompromised")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPrivate")
                        .HasColumnType("bit");

                    b.Property<long>("LastAggregatedRegistrations")
                        .HasColumnType("bigint");

                    b.Property<byte[]>("PublicSpendKey")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PublicViewKey")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("SecretSpendKey")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("SecretViewKey")
                        .HasColumnType("varbinary(max)");

                    b.HasKey("AccountId");

                    b.ToTable("accounts");
                });

            modelBuilder.Entity("O10.Client.DataLayer.Model.AccountKeyValue", b =>
                {
                    b.Property<long>("AccountKeyValueId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("AccountId")
                        .HasColumnType("bigint");

                    b.Property<string>("Key")
                        .HasColumnType("nvarchar(255)")
                        .HasMaxLength(255);

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AccountKeyValueId");

                    b.HasIndex("AccountId");

                    b.HasIndex("Key");

                    b.ToTable("AccountKeyValues");
                });

            modelBuilder.Entity("O10.Client.DataLayer.Model.AssociatedAttributeBackup", b =>
                {
                    b.Property<long>("AssociatedAttributeBackupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AssociatedIssuer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RootAssetId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RootIssuer")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("SchemeName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AssociatedAttributeBackupId");

                    b.HasIndex("RootAssetId");

                    b.HasIndex("RootIssuer");

                    b.ToTable("associated_attribute_backup");
                });

            modelBuilder.Entity("O10.Client.DataLayer.Model.AutoLogin", b =>
                {
                    b.Property<long>("AutoLoginId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("AccountId")
                        .HasColumnType("bigint");

                    b.Property<byte[]>("SecretKey")
                        .HasColumnType("varbinary(max)");

                    b.HasKey("AutoLoginId");

                    b.HasIndex("AccountId");

                    b.ToTable("auto_logins");
                });

            modelBuilder.Entity("O10.Client.DataLayer.Model.BiometricRecord", b =>
                {
                    b.Property<long>("BiometricRecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<Guid>("PersonGuid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UserData")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("BiometricRecordId");

                    b.HasIndex("UserData")
                        .IsUnique()
                        .HasFilter("[UserData] IS NOT NULL");

                    b.ToTable("biometric_records");
                });

            modelBuilder.Entity("O10.Client.DataLayer.Model.ConsentManagement.ConsentManagementSettings", b =>
                {
                    b.Property<long>("ConsentManagementSettingsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("AccountId")
                        .HasColumnType("bigint");

                    b.HasKey("ConsentManagementSettingsId");

                    b.ToTable("consent_management_settings");
                });

            modelBuilder.Entity("O10.Client.DataLayer.Model.ExternalIdentityProvider", b =>
                {
                    b.Property<long>("ExternalIdentityProviderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("AccountId")
                        .HasColumnType("bigint");

                    b.Property<string>("Alias")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ExternalIdentityProviderId");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasFilter("[Name] IS NOT NULL");

                    b.ToTable("external_identity_providers");
                });

            modelBuilder.Entity("O10.Client.DataLayer.Model.IdentitiesScheme", b =>
                {
                    b.Property<long>("IdentitiesSchemeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Alias")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AttributeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("AttributeSchemeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("CanBeRoot")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Issuer")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("IdentitiesSchemeId");

                    b.HasIndex("AttributeName");

                    b.HasIndex("Issuer");

                    b.ToTable("identities_schemes");
                });

            modelBuilder.Entity("O10.Client.DataLayer.Model.Identity", b =>
                {
                    b.Property<long>("IdentityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("AccountId")
                        .HasColumnType("bigint");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdentityId");

                    b.ToTable("identity");
                });

            modelBuilder.Entity("O10.Client.DataLayer.Model.IdentityAttribute", b =>
                {
                    b.Property<long>("AttributeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AttributeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Commitment")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("IdentityId")
                        .HasColumnType("bigint");

                    b.Property<int>("Subject")
                        .HasColumnType("int");

                    b.HasKey("AttributeId");

                    b.HasIndex("Commitment");

                    b.HasIndex("IdentityId");

                    b.ToTable("attributes");
                });

            modelBuilder.Entity("O10.Client.DataLayer.Model.IdentityTarget", b =>
                {
                    b.Property<long>("IdentityTargetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("IdentityId")
                        .HasColumnType("bigint");

                    b.Property<string>("PublicSpendKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PublicViewKey")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdentityTargetId");

                    b.HasIndex("IdentityId");

                    b.ToTable("IdentityTargets");
                });

            modelBuilder.Entity("O10.Client.DataLayer.Model.Inherence.InherenceSetting", b =>
                {
                    b.Property<long>("InherenceSettingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("AccountId")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("InherenceSettingId");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("inherence_settings");
                });

            modelBuilder.Entity("O10.Client.DataLayer.Model.ProcessedWitness", b =>
                {
                    b.Property<long>("ProcessedWitnessId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("AccountId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("Time")
                        .HasColumnType("datetime2");

                    b.Property<long>("WitnessId")
                        .HasColumnType("bigint");

                    b.HasKey("ProcessedWitnessId");

                    b.HasIndex("AccountId", "WitnessId")
                        .IsUnique();

                    b.ToTable("processed_witnesses");
                });

            modelBuilder.Entity("O10.Client.DataLayer.Model.SamlIdentityProvider", b =>
                {
                    b.Property<long>("SamlIdentityProviderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EntityId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("PublicSpendKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SecretViewKey")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SamlIdentityProviderId");

                    b.HasIndex("EntityId");

                    b.ToTable("saml_identity_providers");
                });

            modelBuilder.Entity("O10.Client.DataLayer.Model.SamlServiceProvider", b =>
                {
                    b.Property<long>("SamlServiceProviderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EntityId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("SingleLogoutUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SamlServiceProviderId");

                    b.HasIndex("EntityId");

                    b.ToTable("saml_service_providers");
                });

            modelBuilder.Entity("O10.Client.DataLayer.Model.SamlSettings", b =>
                {
                    b.Property<long>("SamlSettingsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("DefaultSamlIdpAccountId")
                        .HasColumnType("bigint");

                    b.Property<long>("DefaultSamlIdpId")
                        .HasColumnType("bigint");

                    b.HasKey("SamlSettingsId");

                    b.ToTable("saml_settings");
                });

            modelBuilder.Entity("O10.Client.DataLayer.Model.Scenarios.ScenarioAccount", b =>
                {
                    b.Property<long>("ScenarioAccountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("AccountId")
                        .HasColumnType("bigint");

                    b.Property<long?>("ScenarioSessionId")
                        .HasColumnType("bigint");

                    b.HasKey("ScenarioAccountId");

                    b.HasIndex("ScenarioSessionId");

                    b.ToTable("scenario_accounts");
                });

            modelBuilder.Entity("O10.Client.DataLayer.Model.Scenarios.ScenarioSession", b =>
                {
                    b.Property<long>("ScenarioSessionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CurrentStep")
                        .HasColumnType("int");

                    b.Property<int>("ScenarioId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserSubject")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ScenarioSessionId");

                    b.HasIndex("UserSubject");

                    b.ToTable("scenario_sessions");
                });

            modelBuilder.Entity("O10.Client.DataLayer.Model.ServiceProviderRegistration", b =>
                {
                    b.Property<long>("ServiceProviderRegistrationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("AccountId")
                        .HasColumnType("bigint");

                    b.Property<byte[]>("Commitment")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.HasKey("ServiceProviderRegistrationId");

                    b.ToTable("service_provider_registrations");
                });

            modelBuilder.Entity("O10.Client.DataLayer.Model.ServiceProviders.GroupRelation", b =>
                {
                    b.Property<long>("GroupRelationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AssetId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("GroupName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GroupOwnerKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Issuer")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("GroupRelationId");

                    b.HasIndex("AssetId");

                    b.HasIndex("Issuer");

                    b.ToTable("group_relations");
                });

            modelBuilder.Entity("O10.Client.DataLayer.Model.ServiceProviders.RegistrationCommitment", b =>
                {
                    b.Property<long>("RegistrationCommitmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AssetId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Commitment")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Issuer")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ServiceProviderInfo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RegistrationCommitmentId");

                    b.HasIndex("AssetId");

                    b.HasIndex("Commitment")
                        .IsUnique()
                        .HasFilter("[Commitment] IS NOT NULL");

                    b.HasIndex("Issuer");

                    b.ToTable("RegistrationCommitments");
                });

            modelBuilder.Entity("O10.Client.DataLayer.Model.ServiceProviders.RelationGroup", b =>
                {
                    b.Property<long>("RelationGroupId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("AccountId")
                        .HasColumnType("bigint");

                    b.Property<string>("GroupName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RelationGroupId");

                    b.HasIndex("AccountId");

                    b.ToTable("RelationGroups");
                });

            modelBuilder.Entity("O10.Client.DataLayer.Model.ServiceProviders.RelationRecord", b =>
                {
                    b.Property<long>("RelationRecordId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("AccountId")
                        .HasColumnType("bigint");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("RegistrationCommitmentId")
                        .HasColumnType("bigint");

                    b.Property<long?>("RelationGroupId")
                        .HasColumnType("bigint");

                    b.Property<string>("RootAttributeValue")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RelationRecordId");

                    b.HasIndex("AccountId");

                    b.HasIndex("RegistrationCommitmentId");

                    b.HasIndex("RelationGroupId");

                    b.ToTable("RelationRecords");
                });

            modelBuilder.Entity("O10.Client.DataLayer.Model.ServiceProviders.SpUserTransaction", b =>
                {
                    b.Property<long>("SpUserTransactionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("AccountId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsCompromised")
                        .HasColumnType("bit");

                    b.Property<bool>("IsConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("IsProcessed")
                        .HasColumnType("bit");

                    b.Property<long>("ServiceProviderRegistrationId")
                        .HasColumnType("bigint");

                    b.Property<string>("TransactionDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TransactionId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("SpUserTransactionId");

                    b.HasIndex("AccountId");

                    b.HasIndex("TransactionId")
                        .IsUnique()
                        .HasFilter("[TransactionId] IS NOT NULL");

                    b.ToTable("sp_user_transactions");
                });

            modelBuilder.Entity("O10.Client.DataLayer.Model.SpAttribute", b =>
                {
                    b.Property<long>("SpAttributeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("AccountId")
                        .HasColumnType("bigint");

                    b.Property<byte[]>("AssetId")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("AttributeSchemeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("IssuingCommitment")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("OriginalBlindingFactor")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("OriginalCommitment")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Source")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SpAttributeId");

                    b.ToTable("sp_attributes");
                });

            modelBuilder.Entity("O10.Client.DataLayer.Model.SpDocument", b =>
                {
                    b.Property<long>("SpDocumentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("AccountId")
                        .HasColumnType("bigint");

                    b.Property<string>("DocumentName")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Hash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("LastChangeRecordHeight")
                        .HasColumnType("decimal(20,0)");

                    b.HasKey("SpDocumentId");

                    b.HasIndex("AccountId");

                    b.HasIndex("DocumentName");

                    b.ToTable("sp_documents");
                });

            modelBuilder.Entity("O10.Client.DataLayer.Model.SpDocumentAllowedSigner", b =>
                {
                    b.Property<long>("SpDocumentAllowedSignerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("AccountId")
                        .HasColumnType("bigint");

                    b.Property<string>("BlindingFactor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("DocumentSpDocumentId")
                        .HasColumnType("bigint");

                    b.Property<string>("GroupCommitment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GroupIssuer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GroupName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SpDocumentAllowedSignerId");

                    b.HasIndex("AccountId");

                    b.HasIndex("DocumentSpDocumentId");

                    b.ToTable("sp_document_allowed_signers");
                });

            modelBuilder.Entity("O10.Client.DataLayer.Model.SpDocumentSignature", b =>
                {
                    b.Property<long>("SpDocumentSignatureId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("DocumentRecordHeight")
                        .HasColumnType("decimal(20,0)");

                    b.Property<byte[]>("DocumentSignRecord")
                        .HasColumnType("varbinary(max)");

                    b.Property<long?>("DocumentSpDocumentId")
                        .HasColumnType("bigint");

                    b.Property<decimal>("SignatureRecordHeight")
                        .HasColumnType("decimal(20,0)");

                    b.HasKey("SpDocumentSignatureId");

                    b.HasIndex("DocumentRecordHeight");

                    b.HasIndex("DocumentSpDocumentId");

                    b.HasIndex("SignatureRecordHeight");

                    b.ToTable("sp_document_signatures");
                });

            modelBuilder.Entity("O10.Client.DataLayer.Model.SpIdenitityValidation", b =>
                {
                    b.Property<long>("SpIdenitityValidationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("AccountId")
                        .HasColumnType("bigint");

                    b.Property<byte[]>("GroupIdCriterion")
                        .HasColumnType("varbinary(max)");

                    b.Property<int?>("NumericCriterion")
                        .HasColumnType("int");

                    b.Property<string>("SchemeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ValidationType")
                        .HasColumnType("int");

                    b.HasKey("SpIdenitityValidationId");

                    b.ToTable("sp_identity_validations");
                });

            modelBuilder.Entity("O10.Client.DataLayer.Model.SynchronizationStatus", b =>
                {
                    b.Property<long>("SynchronizationStatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("AccountId")
                        .HasColumnType("bigint");

                    b.Property<long>("LastUpdatedCombinedBlockHeight")
                        .HasColumnType("bigint");

                    b.HasKey("SynchronizationStatusId");

                    b.HasIndex("AccountId");

                    b.ToTable("SynchronizationStatuses");
                });

            modelBuilder.Entity("O10.Client.DataLayer.Model.SystemSettings", b =>
                {
                    b.Property<int>("SystemSettingsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte[]>("BiometricSecretKey")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("InitializationVector")
                        .HasColumnType("varbinary(max)");

                    b.HasKey("SystemSettingsId");

                    b.ToTable("system_settings");
                });

            modelBuilder.Entity("O10.Client.DataLayer.Model.UserAssociatedAttribute", b =>
                {
                    b.Property<long>("UserAssociatedAttributeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("AccountId")
                        .HasColumnType("bigint");

                    b.Property<string>("AttributeSchemeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastUpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("RootAssetId")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Source")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserAssociatedAttributeId");

                    b.ToTable("user_associated_attribute");
                });

            modelBuilder.Entity("O10.Client.DataLayer.Model.UserGroupRelation", b =>
                {
                    b.Property<long>("UserGroupRelationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("AccountId")
                        .HasColumnType("bigint");

                    b.Property<string>("AssetId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("GroupName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GroupOwnerKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GroupOwnerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Issuer")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserGroupRelationId");

                    b.HasIndex("AccountId");

                    b.HasIndex("AssetId");

                    b.HasIndex("Issuer");

                    b.ToTable("user_to_group_relations");
                });

            modelBuilder.Entity("O10.Client.DataLayer.Model.UserRootAttribute", b =>
                {
                    b.Property<long>("UserAttributeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("AccountId")
                        .HasColumnType("bigint");

                    b.Property<byte[]>("AnchoringOriginationCommitment")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("AssetId")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<DateTime?>("ConfirmationTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsOverriden")
                        .HasColumnType("bit");

                    b.Property<byte[]>("IssuanceCommitment")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("IssuanceTransactionKey")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("LastBlindingFactor")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("LastCommitment")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("LastDestinationKey")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("LastTransactionKey")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<DateTime?>("LastUpdateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("NextKeyImage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("OriginalBlindingFactor")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("SchemeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Source")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserAttributeId");

                    b.ToTable("UserRootAttributes");
                });

            modelBuilder.Entity("O10.Client.DataLayer.Model.UserSettings", b =>
                {
                    b.Property<long>("UserSettingsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("AccountId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsAutoTheftProtection")
                        .HasColumnType("bit");

                    b.HasKey("UserSettingsId");

                    b.HasIndex("AccountId");

                    b.ToTable("user_settings");
                });

            modelBuilder.Entity("O10.Client.DataLayer.Model.UserTransactionSecrets", b =>
                {
                    b.Property<long>("UserTransactionSecretsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("AccountId")
                        .HasColumnType("bigint");

                    b.Property<string>("AssetId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Issuer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("KeyImage")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserTransactionSecretsId");

                    b.HasIndex("AccountId");

                    b.HasIndex("KeyImage");

                    b.ToTable("user_transaction_secrets");
                });

            modelBuilder.Entity("O10.Client.DataLayer.Model.Users.UserIdentityIssuer", b =>
                {
                    b.Property<long>("UserIdentityIssuerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Alias")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Key")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("UserIdentityIssuerId");

                    b.HasIndex("Key")
                        .IsUnique()
                        .HasFilter("[Key] IS NOT NULL");

                    b.ToTable("user_identity_issuers");
                });

            modelBuilder.Entity("O10.Client.DataLayer.Model.Users.UserRegistration", b =>
                {
                    b.Property<long>("UserRegistrationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long?>("AccountId")
                        .HasColumnType("bigint");

                    b.Property<string>("AssetId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Commitment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Issuer")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ServiceProviderInfo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserRegistrationId");

                    b.HasIndex("AccountId");

                    b.HasIndex("AssetId");

                    b.HasIndex("Issuer");

                    b.ToTable("user_registrations");
                });

            modelBuilder.Entity("O10.Client.DataLayer.ElectionCommittee.EcCandidateRecord", b =>
                {
                    b.HasOne("O10.Client.DataLayer.ElectionCommittee.EcPollRecord", "EcPollRecord")
                        .WithMany("Candidates")
                        .HasForeignKey("EcPollRecordId");
                });

            modelBuilder.Entity("O10.Client.DataLayer.ElectionCommittee.EcPollSelection", b =>
                {
                    b.HasOne("O10.Client.DataLayer.ElectionCommittee.EcPollRecord", "EcPollRecord")
                        .WithMany("PollSelections")
                        .HasForeignKey("EcPollRecordId");
                });

            modelBuilder.Entity("O10.Client.DataLayer.Model.AutoLogin", b =>
                {
                    b.HasOne("O10.Client.DataLayer.Model.Account", "Account")
                        .WithMany()
                        .HasForeignKey("AccountId");
                });

            modelBuilder.Entity("O10.Client.DataLayer.Model.IdentityAttribute", b =>
                {
                    b.HasOne("O10.Client.DataLayer.Model.Identity", "Identity")
                        .WithMany("Attributes")
                        .HasForeignKey("IdentityId");
                });

            modelBuilder.Entity("O10.Client.DataLayer.Model.Scenarios.ScenarioAccount", b =>
                {
                    b.HasOne("O10.Client.DataLayer.Model.Scenarios.ScenarioSession", "ScenarioSession")
                        .WithMany()
                        .HasForeignKey("ScenarioSessionId");
                });

            modelBuilder.Entity("O10.Client.DataLayer.Model.ServiceProviders.RelationGroup", b =>
                {
                    b.HasOne("O10.Client.DataLayer.Model.Account", "Account")
                        .WithMany()
                        .HasForeignKey("AccountId");
                });

            modelBuilder.Entity("O10.Client.DataLayer.Model.ServiceProviders.RelationRecord", b =>
                {
                    b.HasOne("O10.Client.DataLayer.Model.Account", "Account")
                        .WithMany()
                        .HasForeignKey("AccountId");

                    b.HasOne("O10.Client.DataLayer.Model.ServiceProviders.RegistrationCommitment", "RegistrationCommitment")
                        .WithMany()
                        .HasForeignKey("RegistrationCommitmentId");

                    b.HasOne("O10.Client.DataLayer.Model.ServiceProviders.RelationGroup", "RelationGroup")
                        .WithMany()
                        .HasForeignKey("RelationGroupId");
                });

            modelBuilder.Entity("O10.Client.DataLayer.Model.SpDocument", b =>
                {
                    b.HasOne("O10.Client.DataLayer.Model.Account", "Account")
                        .WithMany()
                        .HasForeignKey("AccountId");
                });

            modelBuilder.Entity("O10.Client.DataLayer.Model.SpDocumentAllowedSigner", b =>
                {
                    b.HasOne("O10.Client.DataLayer.Model.Account", "Account")
                        .WithMany()
                        .HasForeignKey("AccountId");

                    b.HasOne("O10.Client.DataLayer.Model.SpDocument", "Document")
                        .WithMany("AllowedSigners")
                        .HasForeignKey("DocumentSpDocumentId");
                });

            modelBuilder.Entity("O10.Client.DataLayer.Model.SpDocumentSignature", b =>
                {
                    b.HasOne("O10.Client.DataLayer.Model.SpDocument", "Document")
                        .WithMany("DocumentSignatures")
                        .HasForeignKey("DocumentSpDocumentId");
                });

            modelBuilder.Entity("O10.Client.DataLayer.Model.SynchronizationStatus", b =>
                {
                    b.HasOne("O10.Client.DataLayer.Model.Account", "Account")
                        .WithMany()
                        .HasForeignKey("AccountId");
                });

            modelBuilder.Entity("O10.Client.DataLayer.Model.UserGroupRelation", b =>
                {
                    b.HasOne("O10.Client.DataLayer.Model.Account", "Account")
                        .WithMany()
                        .HasForeignKey("AccountId");
                });

            modelBuilder.Entity("O10.Client.DataLayer.Model.UserSettings", b =>
                {
                    b.HasOne("O10.Client.DataLayer.Model.Account", "Account")
                        .WithMany()
                        .HasForeignKey("AccountId");
                });

            modelBuilder.Entity("O10.Client.DataLayer.Model.Users.UserRegistration", b =>
                {
                    b.HasOne("O10.Client.DataLayer.Model.Account", "Account")
                        .WithMany()
                        .HasForeignKey("AccountId");
                });
#pragma warning restore 612, 618
        }
    }
}
